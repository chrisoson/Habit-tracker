@using OpenHabitTracker.Data
@using OpenHabitTracker.Data.Models
@using OpenHabitTracker.Services

@inject PriorityService PriorityService
@inject AppData AppData

@if (PriorityService.Priorities is not null && Model is not null)
{
    <InputSelect class="form-select flex-grow-0 w-auto" Value="Model.Priority" ValueExpression="() => Model.Priority" TValue="Priority" ValueChanged="SavePriority">
        @foreach (Priority priority in Enum.GetValues<Priority>().OrderDescending())
        {
            <option @key="priority" value="@priority">@AppData.GetPriorityTitle(priority)</option>
        }
    </InputSelect>
}

@code {
    [EditorRequired]
    [Parameter]
    public ContentModel? Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await PriorityService.Initialize();
    }

    async Task SavePriority(Priority priority)
    {
        if (Model is null)
            return;

        Model.Priority = priority;

        await AppData.UpdateModel(Model);
    }
}
