@page "/notes"
@page "/notes/{Id:long}"

@using Ididit.Data.Models
@using Ididit.Services

@inject NoteService NoteService

<PageTitle>Notes</PageTitle>

<p><a href="/notes/add">Add note</a></p>

@if (NoteService.Notes is null)
{
    <p>Loading...</p>
}
else
{
    foreach (NoteModel note in NoteService.Notes.Where(n => !n.IsDeleted))
    {
        if (note.Id == Id)
        {
            <p><a href="/notes">@note.Title</a></p>

            <p><a href="/notes/@note.Id/update">Update</a></p>

            <button @onclick="() => NoteService.DeleteNote(note)">Delete Note</button>

            <p>CategoryId: @note.CategoryId</p>
            <p>PriorityId: @note.PriorityId</p>

            <p>@note.Content</p>

            <div>
                <small>Created: @note.CreatedAt</small>
                <small>Updated: @note.UpdatedAt</small>
            </div>
        }
        else
        {
            <p><a href="/notes/@note.Id">@note.Title</a></p>
        }
    }
}

@code {
    [Parameter]
    public long? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await NoteService.Initialize();
    }

    protected override void OnParametersSet()
    {
        NoteService.SetSelectedNote(Id);
    }
}
