@page "/backup"

@using Ididit.Backup
@using Ididit.Blazor.Files

@inject BackupService BackupService
@inject IOpenFile OpenFile
@inject ISaveFile SaveFile

<PageTitle>Backup</PageTitle>

<div class="col mh-100 overflow-auto">

    <button class="btn btn-primary" @onclick="() => ExportFile(DataFormat.Json)">Export JSON</button>
    <button class="btn btn-primary" @onclick="() => ExportFile(DataFormat.Tsv)">Export TSV</button>
    <button class="btn btn-primary" @onclick="() => ExportFile(DataFormat.Yaml)">Export YAML</button>

    @OpenFile.OpenFileDialog(OnFileOpened)

    @_filename

    <pre>@_fileContent</pre>

</div>

@code {
    string _filename = string.Empty;

    string _fileContent = string.Empty;

    private async Task ExportFile(DataFormat dataFormat)
    {
        _fileContent = await BackupService.GetDataExportFileString(dataFormat);

        string extension = dataFormat.ToString().ToLower();

        await SaveFile.SaveFileDialog($"ididit.{extension}", _fileContent);
    }

    private async Task OnFileOpened(string filename, Stream stream)
    {
#if DEBUG
        _filename = filename;

        using MemoryStream memoryStream = new();

        await stream.CopyToAsync(memoryStream);
        memoryStream.Position = 0;

        using StreamReader streamReader = new(memoryStream);

        _fileContent = await streamReader.ReadToEndAsync();

        memoryStream.Position = 0;
        streamReader.DiscardBufferedData();

        StateHasChanged();

        stream = memoryStream;
#endif

        await BackupService.ImportDataFile(filename, stream);
    }
}