@page "/tasks/add"
@page "/tasks/{Id:long}/update"

@using Ididit.Data.Models
@using Ididit.Services

@inject TaskService TaskService

<PageTitle>Tasks</PageTitle>

<div class="col mh-100 overflow-auto px-1">

    @if (TaskService.EditTask is not null)
    {
        <div class="bg-body-tertiary my-1 p-1">
            <div class="input-group">
                <PriorityComponent Model="TaskService.EditTask" />

                <InputTextImmediate class="form-control" @bind-Value="TaskService.EditTask.Title" placeholder="Add new task" />

                <button class="btn btn-outline-primary" @onclick="SaveTask" disabled="@string.IsNullOrWhiteSpace(TaskService.EditTask.Title)"><i class="bi bi-floppy"></i></button>
            </div>

            <div class="input-group">
                <span class="input-group-text">Planned at</span>
                <InputDate class="form-control" Type="InputDateType.DateTimeLocal" @bind-Value="TaskService.EditTask.PlannedAt" />
            </div>

            <CategoryComponent Model="TaskService.EditTask" />
        </div>
    }

</div>

@code {
    [Parameter]
    public long? Id { get; set; }

    protected override void OnParametersSet()
    {
        if (Id is null)
            TaskService.EditTask = new();
        else
            TaskService.EditTask = TaskService.Tasks?.FirstOrDefault(t => t.Id == Id);
    }

    [Inject]
    private NavigationManager? NavigationManager { get; set; }

    private async Task SaveTask()
    {
        if (Id is null)
            await TaskService.AddTask();
        else
            await TaskService.UpdateTask();

        NavigationManager?.NavigateTo("/tasks");
    }
}