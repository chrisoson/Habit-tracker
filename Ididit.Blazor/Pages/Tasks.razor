@page "/tasks"
@page "/tasks/{Id:long}"

@using Ididit.Blazor.Components
@using Ididit.Data.Models
@using Ididit.Services

@inject TaskService TaskService

<PageTitle>Tasks</PageTitle>

<p><a href="/tasks/add">Add task</a></p>

@if (TaskService.Tasks is null)
{
    <p>Loading...</p>
}
else
{
    foreach (TaskModel task in TaskService.Tasks.Where(t => !t.IsDeleted))
    {
        <div class="bg-body-tertiary my-1">
            @if (task.Id == Id)
            {
                <p>
                    <a href="/tasks">@task.Title</a>
                    <a href="/tasks/@task.Id/update"><i class="bi bi-pencil-square"></i></a>
                    <button @onclick="() => TaskService.DeleteTask(task)"><i class="bi bi-trash"></i></button>
                    <button @onclick="() => TaskService.MarkAsDone(task)"><i class="bi bi-check-square"></i></button>
                </p>

                <p>CategoryId: @task.CategoryId</p>
                <p>PriorityId: @task.PriorityId</p>

                if (task.Date is not null)
                {
                    <p>Date: @task.Date</p>
                }

                if (task.StartedAt is not null)
                {
                    <p>StartedAt: @task.StartedAt</p>
                }

                if (task.CompletedAt is not null)
                {
                    <p>CompletedAt: @task.CompletedAt</p>
                }

                <ItemsComponent Items=task />

                <div>
                    <small>Created: @task.CreatedAt</small>
                    <small>Updated: @task.UpdatedAt</small>
                </div>
            }
            else
            {
                <p>
                    <a href="/tasks/@task.Id">@task.Title</a>
                    <button @onclick="() => TaskService.MarkAsDone(task)"><i class="bi bi-check-square"></i></button>
                </p>

                <ItemsComponent Items=task />
            }
        </div>
    }
}

@code {
    [Parameter]
    public long? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await TaskService.Initialize();
    }

    protected override void OnParametersSet()
    {
        TaskService.SetSelectedTask(Id);
    }
}
