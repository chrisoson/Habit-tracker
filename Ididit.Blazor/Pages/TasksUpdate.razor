@page "/tasks/{Id:long}/update"

@using Ididit.Data.Models
@using Ididit.Services

@inject TaskService TaskService

<PageTitle>TasksUpdate</PageTitle>

@if (TaskService.EditTask is not null)
{
    <div class="bg-body-tertiary my-1 p-1">
        <div>
            <InputTextImmediate @bind-Value="TaskService.EditTask.Title" placeholder="Title" />

            <button @onclick="UpdateTask" disabled="@string.IsNullOrWhiteSpace(TaskService.EditTask.Title)"><i class="bi bi-floppy"></i></button>
        </div>

        <CategoryComponent Model="TaskService.EditTask" />

        <PriorityComponent Model="TaskService.EditTask" />

        <div>
            <InputDate Type="InputDateType.DateTimeLocal" id="dateInput" @bind-Value="TaskService.EditTask.Date" />
        </div>
    </div>
}

@code {
    [Parameter]
    public long? Id { get; set; }

    protected override void OnParametersSet()
    {
        TaskService.EditTask = TaskService.Tasks?.FirstOrDefault(t => t.Id == Id);
    }

    [Inject]
    private NavigationManager? NavigationManager { get; set; }

    private async Task UpdateTask()
    {
        await TaskService.UpdateTask();

        NavigationManager?.NavigateTo("/tasks");
    }
}